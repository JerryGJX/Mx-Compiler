/*
Test Package: Codegen
Author: 14' Rongyu You
Time: 2020-02-03
Input:
=== input ===
=== end ===
Output:
=== output ===
vector x: ( 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 )
excited!
vector y: ( 9, 8, 7, 817, 5, 4, 3, 2, 1, 0 )
x + y: ( 18, 16, 14, 823, 10, 8, 6, 4, 2, 0 )
x * y: 0
(1 << 3) * y: ( 72, 64, 56, 6536, 40, 32, 24, 16, 8, 0 )
=== end ===
ExitCode: 0
InstLimit: -1
Origin Package: Codegen Pretest-900
*/
//
// Naive vector class for Mx*.
// Without any guarantee for robustness.
//
class vector{
	int[] data;
	void init(){
		// init the vector from an array

		data = new int[10];

		println("getDim in init2 = " + toString(this.getDim()));
	}

	int getDim(){
		int A = data.size();
		return A;
	}


	string tostring(){
	println("data.size in tostring = " + toString(data.size()));
    return toString(getDim());
	}

};

int main(){
	vector x = new vector;
	println("x.getDim() in main1: " + toString(x.getDim()));
	x.init();

	println("x.getDim() in main2: " + toString(x.getDim()));

	println("x.tostring() in main: " + x.tostring());
	println("x.getDim() in main3: " + toString(x.getDim()));
}

